# Group by Alcohol

```{r group by Alcohol}
# Group by AlcoholPercentage
normalized_data_nonalcohol <- selected_data %>%
  filter(AlcoholPercentage == 0)  # Group with (AlcoholPercentage = 0

normalized_data_alcohol <- selected_data %>%
  filter(AlcoholPercentage > 0)  # Group with (AlcoholPercentage >= 0

numeric_data_nonalcohol <- normalized_data_nonalcohol %>% select_if(is.numeric)
preprocess_params_nonalcohol <- preProcess(numeric_data_nonalcohol, method = c("center", "scale"))
scaled_numeric_data_nonalcohol <- predict(preprocess_params_nonalcohol, numeric_data_nonalcohol)
normalized_data_nonalcohol <- bind_cols(scaled_numeric_data_nonalcohol, normalized_data_nonalcohol %>% select_if(Negate(is.numeric)))

numeric_data_alcohol <- normalized_data_alcohol %>% select_if(is.numeric)
preprocess_params_alcohol <- preProcess(numeric_data_alcohol, method = c("center", "scale"))
scaled_numeric_data_alcohol <- predict(preprocess_params_alcohol, numeric_data_alcohol)
normalized_data_alcohol <- bind_cols(scaled_numeric_data_alcohol, normalized_data_alcohol %>% select_if(Negate(is.numeric)))
```

## For Systolic
```{r}
# Set seed for reproducibility
set.seed(3888)

# Function for cross-validation using GAM for Alcohol groups
systolic_gam_cv_alcohol <- function(data) {
  n <- nrow(data)

  folds <- map(1:repeats, ~ sample(rep(1:k, length.out = n)))
  
  results <- map_dfr(folds, function(fold) {
    map_dfr(1:k, function(i) {
      train_idx <- which(fold != i)
      test_idx <- which(fold == i)
      
      data_train <- data[train_idx, ]
      data_test <- data[test_idx, ]
      
      actual <- data_test$Systolic
      
      gam_model <- gam(Systolic ~ s(FiberEnergy) + s(CarbohydrateEnergy), data = data_train)
      
      gam_predictions <- predict(gam_model, newdata = data_test)
      
      tibble(
        rmse = sqrt(mean((gam_predictions - actual)^2)),
        mae = mean(abs(gam_predictions - actual)),
        r2 = cor(gam_predictions, actual)^2
      )
    })
  })

  summary_results <- results %>%
    summarize(
      mean_rmse = mean(rmse),
      mean_mae = mean(mae),
      mean_r2 = mean(r2)
    )
  
  return(summary_results)
}

# Apply cross-validation for nonalcohol and alcohol groups
results_nonalcohol <- systolic_gam_cv_alcohol(normalized_data_nonalcohol)
results_alcohol <- systolic_gam_cv_alcohol(normalized_data_alcohol)

# Extract RMSE, MAE, and R² for each group
gam_rmse_systolic_nonalcohol <- results_nonalcohol$mean_rmse
gam_mae_systolic_nonalcohol <- results_nonalcohol$mean_mae
gam_r2_systolic_nonalcohol <- results_nonalcohol$mean_r2

gam_rmse_systolic_alcohol <- results_alcohol$mean_rmse
gam_mae_systolic_alcohol <- results_alcohol$mean_mae
gam_r2_systolic_alcohol <- results_alcohol$mean_r2
```

```{r}
# Create a data frame for the results
Systolic_alcohol_df <- data.frame(
    Group = c("Non-Alcohol", "Alcohol"),
    RMSE = c(gam_rmse_systolic_nonalcohol, gam_rmse_systolic_alcohol),
    MAE = c(gam_mae_systolic_nonalcohol, gam_mae_systolic_alcohol),
    R2 = c(gam_r2_systolic_nonalcohol, gam_r2_systolic_alcohol)
)

# Define custom colors for the bar plots
colors_alcohol <- c('#1b9e77', '#d95f02')  # Custom colors for Alcohol vs Non-Alcohol

# Define y-axis ranges to improve the plot
rmse_range_alcohol <- c(min(Systolic_alcohol_df$RMSE) * 0.95, max(Systolic_alcohol_df$RMSE) * 1.05)
mae_range_alcohol <- c(min(Systolic_alcohol_df$MAE) * 0.95, max(Systolic_alcohol_df$MAE) * 1.05)
r2_range_alcohol <- c(min(Systolic_alcohol_df$R2) * 0.95, max(Systolic_alcohol_df$R2) * 1.05)

# Plot RMSE
Systolic_rmse_alcohol <- plot_ly(Systolic_alcohol_df, x = ~Group, y = ~round(RMSE, 3), type = 'bar', color = ~Group, colors = colors_alcohol,
               text = ~round(RMSE, 3), textposition = 'outside', textfont = list(color = 'black')) %>%
  layout(
    yaxis = list(title = 'RMSE', range = rmse_range_alcohol),
    showlegend = FALSE,
    paper_bgcolor = 'rgba(245, 246, 249, 1)',
    plot_bgcolor = 'rgba(0, 0, 0, 0)')

# Plot MAE
Systolic_mae_alcohol <- plot_ly(Systolic_alcohol_df, x = ~Group, y = ~round(MAE, 3), type = 'bar', color = ~Group, colors = colors_alcohol,
               text = ~round(MAE, 3), textposition = 'outside', textfont = list(color = 'black')) %>%
  layout(
    yaxis = list(title = 'MAE', range = mae_range_alcohol),
    showlegend = FALSE,
    paper_bgcolor = 'rgba(245, 246, 249, 1)',
    plot_bgcolor = 'rgba(0, 0, 0, 0)')

# Plot R²
Systolic_r2_alcohol <- plot_ly(Systolic_alcohol_df, x = ~Group, y = ~round(R2, 3), type = 'bar', color = ~Group, colors = colors_alcohol,
               text = ~round(R2, 3), textposition = 'outside', textfont = list(color = 'black')) %>%
  layout(
    yaxis = list(title = 'R²', range = r2_range_alcohol),
    showlegend = FALSE,
    paper_bgcolor = 'rgba(245, 246, 249, 1)',
    plot_bgcolor = 'rgba(0, 0, 0, 0)')

# Combine the plots in a single layout
SystolicFig_alcohol <- subplot(Systolic_rmse_alcohol, Systolic_mae_alcohol, Systolic_r2_alcohol, nrows = 1, shareY = FALSE) %>%
  layout(title = list(text = "Figure: RMSE [Left], MAE [Middle], R² [Right] for Alcohol Groups (Systolic)", 
                      font = list(size = 12)))

# Show the final plot
SystolicFig_alcohol
```

## For Diastolic
```{r}
# Set seed for reproducibility
set.seed(3888)

# Function for cross-validation using GAM for Alcohol groups (Diastolic)
diastolic_gam_cv_alcohol <- function(data) {
  n <- nrow(data)

  folds <- map(1:repeats, ~ sample(rep(1:k, length.out = n)))
  
  results <- map_dfr(folds, function(fold) {
    map_dfr(1:k, function(i) {
      train_idx <- which(fold != i)
      test_idx <- which(fold == i)
      
      data_train <- data[train_idx, ]
      data_test <- data[test_idx, ]
      
      actual <- data_test$Diastolic
      
      gam_model <- gam(Diastolic ~ s(FiberEnergy) + s(CarbohydrateEnergy), data = data_train)
      
      gam_predictions <- predict(gam_model, newdata = data_test)
      
      tibble(
        rmse = sqrt(mean((gam_predictions - actual)^2)),
        mae = mean(abs(gam_predictions - actual)),
        r2 = cor(gam_predictions, actual)^2
      )
    })
  })

  summary_results <- results %>%
    summarize(
      mean_rmse = mean(rmse),
      mean_mae = mean(mae),
      mean_r2 = mean(r2)
    )
  
  return(summary_results)
}

# Apply cross-validation for nonalcohol and alcohol groups
results_nonalcohol_dias <- diastolic_gam_cv_alcohol(normalized_data_nonalcohol)
results_alcohol_dias <- diastolic_gam_cv_alcohol(normalized_data_alcohol)

# Extract RMSE, MAE, and R² for each group
gam_rmse_diastolic_nonalcohol <- results_nonalcohol_dias$mean_rmse
gam_mae_diastolic_nonalcohol <- results_nonalcohol_dias$mean_mae
gam_r2_diastolic_nonalcohol <- results_nonalcohol_dias$mean_r2

gam_rmse_diastolic_alcohol <- results_alcohol_dias$mean_rmse
gam_mae_diastolic_alcohol <- results_alcohol_dias$mean_mae
gam_r2_diastolic_alcohol <- results_alcohol_dias$mean_r2
```

```{r}
# Create a data frame for the results (Diastolic)
Diastolic_alcohol_df <- data.frame(
    Group = c("Non-Alcohol", "Alcohol"),
    RMSE = c(gam_rmse_diastolic_nonalcohol, gam_rmse_diastolic_alcohol),
    MAE = c(gam_mae_diastolic_nonalcohol, gam_mae_diastolic_alcohol),
    R2 = c(gam_r2_diastolic_nonalcohol, gam_r2_diastolic_alcohol)
)

# Define custom colors for the bar plots
colors_alcohol <- c('#1b9e77', '#d95f02')  # Custom colors for Alcohol vs Non-Alcohol

# Define y-axis ranges to improve the plot
rmse_range_alcohol <- c(min(Diastolic_alcohol_df$RMSE) * 0.95, max(Diastolic_alcohol_df$RMSE) * 1.05)
mae_range_alcohol <- c(min(Diastolic_alcohol_df$MAE) * 0.95, max(Diastolic_alcohol_df$MAE) * 1.05)
r2_range_alcohol <- c(min(Diastolic_alcohol_df$R2) * 0.95, max(Diastolic_alcohol_df$R2) * 1.05)

# Plot RMSE
Diastolic_rmse_alcohol <- plot_ly(Diastolic_alcohol_df, x = ~Group, y = ~round(RMSE, 3), type = 'bar', color = ~Group, colors = colors_alcohol,
               text = ~round(RMSE, 3), textposition = 'outside', textfont = list(color = 'black')) %>%
  layout(
    yaxis = list(title = 'RMSE', range = rmse_range_alcohol),
    showlegend = FALSE,
    paper_bgcolor = 'rgba(245, 246, 249, 1)',
    plot_bgcolor = 'rgba(0, 0, 0, 0)')

# Plot MAE
Diastolic_mae_alcohol <- plot_ly(Diastolic_alcohol_df, x = ~Group, y = ~round(MAE, 3), type = 'bar', color = ~Group, colors = colors_alcohol,
               text = ~round(MAE, 3), textposition = 'outside', textfont = list(color = 'black')) %>%
  layout(
    yaxis = list(title = 'MAE', range = mae_range_alcohol),
    showlegend = FALSE,
    paper_bgcolor = 'rgba(245, 246, 249, 1)',
    plot_bgcolor = 'rgba(0, 0, 0, 0)')

# Plot R²
Diastolic_r2_alcohol <- plot_ly(Diastolic_alcohol_df, x = ~Group, y = ~round(R2, 3), type = 'bar', color = ~Group, colors = colors_alcohol,
               text = ~round(R2, 3), textposition = 'outside', textfont = list(color = 'black')) %>%
  layout(
    yaxis = list(title = 'R²', range = r2_range_alcohol),
    showlegend = FALSE,
    paper_bgcolor = 'rgba(245, 246, 249, 1)',
    plot_bgcolor = 'rgba(0, 0, 0, 0)')

# Combine the plots in a single layout
DiastolicFig_alcohol <- subplot(Diastolic_rmse_alcohol, Diastolic_mae_alcohol, Diastolic_r2_alcohol, nrows = 1, shareY = FALSE) %>%
  layout(title = list(text = "Figure: RMSE [Left], MAE [Middle], R² [Right] for Alcohol Groups (Diastolic)", 
                      font = list(size = 12)))

# Show the final plot
DiastolicFig_alcohol
```

# Partial Dependence Plot
```{r}
# Group where AlcoholPercentage == 0 (Non-alcohol)
systolic_gam_model_nonalcohol <- gam(Systolic ~ s(FiberEnergy) + s(CarbohydrateEnergy), 
                                     data = normalized_data_nonalcohol)

# Group where AlcoholPercentage > 0 (Alcohol)
systolic_gam_model_alcohol <- gam(Systolic ~ s(FiberEnergy) + s(CarbohydrateEnergy), 
                                  data = normalized_data_alcohol)
# Group where AlcoholPercentage == 0 (Non-alcohol)
diastolic_gam_model_nonalcohol <- gam(Diastolic ~ s(FiberEnergy) + s(CarbohydrateEnergy), 
                                     data = normalized_data_nonalcohol)

# Group where AlcoholPercentage > 0 (Alcohol)
diastolic_gam_model_alcohol <- gam(Diastolic ~ s(FiberEnergy) + s(CarbohydrateEnergy), 
                                  data = normalized_data_alcohol)
```

```{r fig.width= 12, fig.height=14}
par(mfrow = c(2, 2))  

# Define color for FiberEnergy
fiber_color <- "blue"

plot(systolic_gam_model_nonalcohol, select = 1, seWithMean = TRUE, shade = TRUE, col = fiber_color, main = "nonalcohol Group - Systolic - FiberEnergy")  # FiberEnergy

plot(diastolic_gam_model_nonalcohol, select = 1, seWithMean = TRUE, shade = TRUE, col = fiber_color, main = "nonalcohol Group - Diastolic - FiberEnergy")  # FiberEnergy

plot(systolic_gam_model_alcohol, select = 1, seWithMean = TRUE, shade = TRUE, col = fiber_color, main = "alcohol Group - Systolic - FiberEnergy")  # FiberEnergy

plot(diastolic_gam_model_alcohol, select = 1, seWithMean = TRUE, shade = TRUE, col = fiber_color, main = "alcohol Group - Diastolic - FiberEnergy")  # FiberEnergy

# Reset the graphical parameters to default
par(mfrow = c(1, 1))
```
```{r fig.width= 12, fig.height=14}
par(mfrow = c(2, 2))  

# Define color for CarbohydrateEnergy
carb_color <- "red"

plot(systolic_gam_model_nonalcohol, select = 2, seWithMean = TRUE, shade = TRUE, col = carb_color, main = "nonalcohol Group - Systolic - CarbohydrateEnergy")  # CarbohydrateEnergy

plot(diastolic_gam_model_nonalcohol, select = 2, seWithMean = TRUE, shade = TRUE, col = carb_color, main = "nonalcohol Group - Diastolic - CarbohydrateEnergy")  # CarbohydrateEnergy

plot(systolic_gam_model_alcohol, select = 2, seWithMean = TRUE, shade = TRUE, col = carb_color, main = "alcohol Group - Systolic - CarbohydrateEnergy")  # CarbohydrateEnergy

plot(diastolic_gam_model_alcohol, select = 2, seWithMean = TRUE, shade = TRUE, col = carb_color, main = "alcohol Group - Diastolic - CarbohydrateEnergy")  # CarbohydrateEnergy

# Reset the graphical parameters to default
par(mfrow = c(1, 1))
```
